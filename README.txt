I build the directory structure like so.............
./Train 	Is where the Train Images have to be.
./TrainDotted   Train dotted Images, needed a dotted image for every train
./TestTrain  	Images pulled off Training for cross validation
./TestTrainDotted Cross validation Dotted Images 
./Test  	Here for the Final Test Images
./TrainBoxed    Images dumped here with bounding boxes drawn 
                once the BB's are generated
./GenTrainImages Here in lie most of the code used for generating
                 the bounding boxes and classifiying the Dots.

./HaarClass	This is where all the code for the Haar Classifier is located

I decided to push two images up the git with the code as code could be
simply.
******************************************************************
TestScript.py will run the process full cycle on these two images.
Find and classifiy the dots.
Print out the RMSE compared to train.csv
Generate the Bounding boxes and draw them on the image and place
them in the TrainBoxed Folder. The conditions are set like they were 
for Haar Classifier Train not DetectNet. So some of the boxes will be
very small around the seal these are the ones that got rejected.
*********************************************************************
I you then want to see the last Haar Classifier that was Trained
change directory into HaarClass and run

cd HaarClass
python HaarPredict.py

It will run prediction on the two images and dump the results into
./HaarClass/foundBoxed
The results are bad it finds one sealion in 640.jpg add has a large
FP number.
*******************************************************************
So if you go to the TrainBoxed you will see the Bounding Boxes Produced,
and if you go to the foundBoxed File you will see the results form 
the Haar Classifier
****Warning**** This was build to run with a python interpreter that
has the working directory as the base of this repo so it can find everything.  
Also as the process proceeds there will assorted files dumped into
the directory don't delete them unless you want to start the process
over. If you do start over the files will be deleted and replaced.

command: python TestScript.py


CONTENTS of ./GenTrainImages

./GenTrainImages/Utilities.py
{Collection of functions performing assorted tasks}
./GenTrainImages/BlobDetector.py
{Is a class that is a pure python blob detector custom
built for the task at hand.}
./GenTrainImages/ColorClassifier.py
{This is class that handles extracting the colors for classification,
and selecting the negative samples}
./GenTrainImages/ColorMaskGenerator.py
{This is a class used by the code in the HaarClass folder}
./GenTrainImages/FloodFillLion.py
{This is class that is used for running the FloodFill algo}
./GenTrainImages/PartitionImage.py
{This is class that used to Partition and translate the Bounding
Boxes for Detect Net}
./GenTrainImages/GenJSON.py
{This is a class that is used to generate all bounding boxes}
./GenTrainImages/SeaLionLocations.py
{This is a class that is used for dot locating and classifiying}
./GenTrainImages/SeaLogit.py
{This is a class that inherits sklearns Logistic Regression Class,
and reimplements the fit and predict functions for our purposes}




CONTENTS of ./HaarClass
Folders
./HaarClass/negimg {this is folder for holding negitive samples,
created in the Haar Train Script}
./HaarClass/posimg {this is a folder for holding the color transformed
images generated by the Haar Train Script}
*********If you don't see these folders they will be created when running the scripts
./HaarClass/HaarPreProc.py
{this is class that many tasks need to prep files and that Images,
for the Haar Classifier provided by opencv.}
./HaarClass/HaarPredictProc.py
{This is a class that used manage the using the HaarClassfier to run
prediction on a whole image, dumps results to ./HaarClass/foundBoxed}
./HaarClass/HaarTrainScript.py
{This is a script ment to be run from the command line to train the Haar
Classifier}
./HaarClass/HaarPredict.py
{this is a script ment to be run from the command line to run the 
Haar Prediction}





